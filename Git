$ git grpe (画像ファイル名)
画像ファイルがどのファイルで使用されているか(反映するための処理が書かれているか)

$ git status
編集記録が記録されている

$ git checkout -f
編集の記録を取り消す


●HEADとは？
今自分が作業している場所を示すポインタ


●GitHubのCircleCIでエラーに疑問を感じたときの操作方法
All checks have failed
↓
Details
↓
deplay - Failed
(クリック)
↓
Rerun▼
Rerun Workflow from Failed


●新しいブランチで作業しているときに前のブランチで修正が見つかったときの退避→修正→元のブランチに戻るまで
Aを編集中
↓
GitHubのエラーに気づく(Bで作業済み)
↓
Aのブランチを退避させるために下記のコマンドを実行する
$ git stash
↓
$ git checkout B
↓
Bのブランチでmasterを取り込むために下記のコマンドを実行する。(Aの直前の編集なら意味がないけどAとBの間に編集があった場合にBのブランチを最新にする意味合いがある)
$ git fetch origin master
↓
$ git merge origin/master
↓
Bを編集
↓
PRをするときの要領でpushまで行う
↓
$ git checkout A
↓
退避した内容を元に戻す
$ git stash pop


●他の方が修正してくれたブランチを自分の環境に取り込んで編集して再度pushする方法

$ git checkout <branch>(編集するブランチ)
※他のブランチで編集作業をしていたら対象のブランチに移動する
↓
$ git pull
(他の方が修正してくれた内容を自分のブランチに取り込む)

※もし下記のエラーがでたら!!
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/<branch>


$ git branch --set-upstream-to=origin/<branch>(編集中のブランチ)
↓
$ git pull
(再度プルする)

編集を行う
↓
編集完了
↓
$ git add .
↓
$ git commit -m "コミットメッセージ"
↓
$ git push
※強制プッシュは絶対にしない!!


●コンフリクトが起きたときの対処方法

対象のブランチで
git pull --rebase origin master  ←rebaseするファイルを指定
↓
コンフリクトが起きている箇所の編集
↓
git add .
↓
git commit -m "コミットメッセージ"
↓
git rebase --continue  ←指定したファイルからrebaseするコマンド
↓
git push origin (対象のブランチ) --force


●(コミット後に)ブランチの内容を全て消す方法
masterに強制チェックアウト
$ git checkout -f master
↓
ブランチを強制削除
$ git branch -D (消したいブランチ)


●ESLintを無視したコミットのやり方
$ git commit --no-verify -m "コミットメッセージ"


●特定のファイルをコミットの対象から除外するコマンド
$ git add . をしたあとに $ git rm --cached (除外したいファイルを記述)


●途中でstyleの崩れなどに気づいたときに過去の差分を確認する方法
$ git log
$ git reset --hard <コミットのログ>
もとに戻るときは $ git pull
作業はmasterで問題ない


●SCSSのファイルがどこにあるかを確認する方法
git grep "scss/xxx"


●テストを無視してpushをする方法
git push --no-verify


●GitHubでssh接続する手順
https://qiita.com/shizuma/items/2b2f873a0034839e47ce
https://blog.cloud-acct.com/posts/u-github-ssh/


●作業途中のブランチを最新にするやり方
※ もし、作業途中のものでcommit出来るものがあればcommitしておく
# masterブランチへ移動
git checkout master
# git pullでmasterを最新に
git pull origin master
# 開発用ブランチへ移動
git checkout 開発用ブランチ
# mergeコマンドでmaserの内容を取り込む
git merge origin master(コミット済みの編集内容は変更されない)
