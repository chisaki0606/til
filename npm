#npmについて
npmはいくつもの依存状態にあるプロジェクトをパッケージ管理するものだということがわかりました。
ではなぜnpmインストールにはnpm ciとnpm installがあるのか？

#npm ciとnpm installの違いについて
npm installはインストールすることによってpackage-lock.jsonが更新されてしまうことがある。
npm ciの場合はpackage-lock.jsonが勝手に更新されることを防ぐことができる
ではなぜその必要性があるのか？

#package-lock.jsonが勝手に更新されることを防ぐメリットについて
npm installでnpmをインストールしてしまった場合に例えば1.0.0のバージョンをインストールしようとしたときに新しいバージョンが公開されていたら1.0.0をインストールしたと思っていてもバグなどのを含んだ別のバージョンが含まれている可能性があるためnpm ciはそれを防ぐメリットがある。

#まとめ
プロジェクトの依存という概念が調べても最後までわからなかったのですが、最後に参照した記事でpackage-lock.jsonが勝手に更新されることを防ぐメリットについて書かれていて、自分が意図しないバージョンのインストールや互換性を持たせる狙いがあるのではと思いました。


#バージョンの切り替え
$ npm install -g npm@6.14.0

#バクの原因となるソースコードを発見し警告するコマンド
$ npm run lint

●npmアンインストール
% sudo npm uninstall npm -g
sudo: npm: command not found
r0206@R0206 ~ % lsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom | while read i; do sudo rm /usr/local/${i}; done$ sudo rm -rf /usr/local/lib/node /usr/local/lib/node_modules /var/db/receipts/org.nodejs.*
pipe while> 
※control + cで中断して大丈夫 
r0206@R0206 ~ % sudo rm -rf ~/.npm
r0206@R0206 ~ % npm -v
zsh: command not found: npm
※こうなったら成功

●パッケージのバージョンをあげる
npm install -D パッケージ名
